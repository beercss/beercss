.field {
  height: 3rem;
  margin-bottom: 2rem;
}

* + .field {
  margin-top: 1rem;
}

.grid > * > .field {
  margin-bottom: 1rem;
}

.grid > * > .field + .field {
  margin-top: 2rem;
}

.grid.no-space > * > .field + .field {
  margin-top: 1rem;
}

.grid.medium-space > * > .field + .field {
  margin-top: 2.5rem;
}

.grid.large-space > * > .field + .field {
  margin-top: 3rem;
}

.field.small {
  height: 2.5rem;
}

.field.large {
  height: 3.5rem;
}

.field.extra {
  height: 4rem;
}

.field {
  border-radius: 0.25rem 0.25rem 0 0;
}

.field.border {
  border-radius: 0.25rem;
}

.field.round.small {
  border-radius: 1.25rem;
}

.field.round {
  border-radius: 1.5rem;
}

.field.round.large {
  border-radius: 1.75rem;
}

.field.round.extra {
  border-radius: 2rem;
}

.field::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: inherit;
  background-color: inherit;
}

.field.fill::before {
  background-color: var(--surface-variant);
  color: var(--on-surface-variant);
}

/* icon */
.field > :is(i, img, svg, progress, a:not(.helper, .error)) {
  position: absolute;
  top: 50%;
  left: auto;
  right: 1rem;
  transform: translateY(-50%);
  cursor: pointer;
  z-index: 0;
  width: 1.5rem;
  height: 1.5rem;
}

.field > :is(i, img, svg, progress, a:not(.helper, .error)):first-child {
  left: 1rem;
  right: auto;
}

.field.invalid > i {
  color: var(--error);
}

.field > progress.circle {
  top: calc(50% - 0.75rem);
  border-width: 0.1875rem;
}

.field > a:not(.helper, .error) {
  z-index: 10;
}

.field > a > :is(i, img, svg, progress, a:not(.helper, .error)) {
  width: 1.5rem;
  height: 1.5rem;
}

/* input, textarea and select */
.field > select,
input[type^=date],
input[type^=time],
input[type=search] {
  appearance: none;
  cursor: pointer;
}

input[type^=date]::-webkit-inner-spin-button,
input[type^=date]::-webkit-calendar-picker-indicator,
input[type^=time]::-webkit-inner-spin-button,
input[type^=time]::-webkit-calendar-picker-indicator {
  opacity: 0;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  cursor: pointer;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button,
input[type=number] {
  appearance: none;
  -moz-appearance: textfield;
}

.field.border > input[type=color] {
  clip-path: polygon(-1% -0.15%, 0.75rem -0.15%, 0.75rem 0.15rem, calc(100% - 5rem) 0.15rem, calc(100% - 5rem) -0.25%, 101% -0.15%, 101% 101%, -0.15% 101%) !important;
  padding-block-start: 0.5rem;
}

input[type=file] {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  opacity: 0;
  cursor: pointer;
}

input[type=search]::-webkit-search-decoration,
input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-results-button,
input[type=search]::-webkit-search-results-decoration {
  display: none;
}

.field > :is(input, textarea, select) {
  border: 0.0625rem solid transparent;
  padding: 0 0.9375rem;
  font-family: inherit;
  font-size: 1rem;
  width: 100%;
  height: 100%;
  outline: none;
  z-index: 1;
  background: none;
  resize: none;
}

.field > :is(input, textarea, select):focus {
  border: 0.125rem solid transparent;
  padding: 0 0.875rem;
}

.field.border > :is(input, textarea, select) {
  border-color: var(--outline);
}

.field.border > :is(input, textarea, select):focus {
  border-color: var(--primary);
}

.field.round > :is(input, textarea, select) {
  padding-left: 1.4376rem;
  padding-right: 1.4376rem;
}

.field.round > :is(input, textarea, select):focus {
  padding-left: 1.375rem;
  padding-right: 1.375rem;
}

.field.prefix > :is(input, textarea, select) {
  padding-left: 2.9375rem;
}

.field.prefix > .slider {
  margin-left: 3.5rem;
}

.field.prefix > :is(input, textarea, select):focus {
  padding-left: 2.875rem;
}

.field.suffix > :is(input, textarea, select) {
  padding-right: 2.9375rem;
}

.field.suffix > .slider {
  margin-right: 3.5rem;
}

.field.suffix > :is(input, textarea, select):focus {
  padding-right: 2.875rem;
}

.field:not(.border, .round) > :is(input, textarea, select) {
  border-bottom-color: var(--outline);
}

.field:not(.border, .round) > :is(input, textarea, select):focus {
  border-bottom-color: var(--primary);
}

.field.round:not(.border, .fill) > :is(input, textarea, select),
.field.round:not(.border) > :is(input, textarea, select):focus {
  box-shadow: var(--elevate1);
}

.field.round:not(.border, .fill) > :is(input, textarea, select):focus {
  box-shadow: var(--elevate2);
}

.field.invalid:not(.border, .round) > :is(input, textarea, select),
.field.invalid:not(.border, .round) > :is(input, textarea, select):focus {
  border-bottom-color: var(--error);
}

.field.invalid.border > :is(input, textarea, select),
.field.invalid.border > :is(input, textarea, select):focus {
  border-color: var(--error);
}

.field:has(> :disabled) {
  opacity: 0.5;
  cursor: not-allowed;
}

.field > :disabled {
  cursor: not-allowed;
}

.field.small.textarea {
  height: 4.5rem;
}

.field.textarea {
  height: 5.5rem;
}

.field.large.textarea {
  height: 6.5rem;
}

.field.extra.textarea {
  height: 7.5rem;
}

.field > select > option {
  background-color: var(--surface);
  color: var(--on-surface);
}

.field.label > :is(input, select) {
  padding-top: 1rem;
}

.field.label.border:not(.fill) > :is(input, select) {
  padding-top: 0;
}

.field.label.small > textarea {
  padding-top: 1.125rem;
}

.field.label > textarea {
  padding-top: 1.375rem;
}

.field.label.large > textarea {
  padding-top: 1.625rem;
}

.field.label.extra > textarea {
  padding-top: 1.875rem;
}

.field.small > textarea,
.field.small:not(.label) > textarea:focus,
.field.small.border:not(.fill) > textarea {
  padding-top: 0.625rem;
}

.field > textarea,
.field:not(.label) > textarea:focus,
.field.border:not(.fill) > textarea {
  padding-top: 0.875rem;
}

.field.large > textarea,
.field.large:not(.label) > textarea:focus,
.field.large.border:not(.fill) > textarea {
  padding-top: 1.125rem;
}

.field.extra > textarea,
.field.extra:not(.label) > textarea:focus,
.field.extra.border:not(.fill) > textarea {
  padding-top: 1.375rem;
}

.field.small.border:not(.fill) > textarea:focus {
  padding-top: 0.5625rem !important;
}

.field.border:not(.fill) > textarea:focus {
  padding-top: 0.8125rem !important;
}

.field.large.border:not(.fill) > textarea:focus {
  padding-top: 1.0625rem !important;
}

.field.extra.border:not(.fill) > textarea:focus {
  padding-top: 1.3125rem !important;
}

/* label */
.field.label > label {
  position: absolute;
  top: -0.5rem;
  left: 1rem;
  display: flex;
  width: calc(100% - 5rem);
  height: 4rem;
  line-height: 4rem;
  font-size: 1rem;
  transition: all 0.2s;
  gap: 0.25rem;
  white-space: nowrap;
}

.field.label.small > label {
  height: 3.5rem;
  line-height: 3.5rem;
}

.field.label.large > label {
  height: 4.5rem;
  line-height: 4.5rem;
}

.field.label.extra > label {
  height: 5rem;
  line-height: 5rem;
}

.field.label.border.prefix:not(.fill) > :is(label.active, :focus + label, [placeholder]:not(:placeholder-shown) + label, select + label) {
  left: 1rem;
}

.field.label.round > label,
.field.label.border.prefix.round:not(.fill) > :is(label.active, :focus + label, [placeholder]:not(:placeholder-shown) + label, select + label) {
  left: 1.5rem;
}

.field.label.prefix > label {
  left: 3rem;
}

.field.label > :is(label.active, :focus + label, [placeholder]:not(:placeholder-shown) + label, select + label) {
  height: 2.5rem;
  line-height: 2.5rem;
  font-size: 0.75rem;
}

.field.label.border:not(.fill) > :is(label.active, :focus + label, [placeholder]:not(:placeholder-shown) + label, select + label) {
  height: 1rem;
  line-height: 1rem;
}

.field.label.border:not(.fill) > label::after {
  content: "";
  display: block;
  margin-top: 0.5rem;
  border-top: 0.0625rem solid var(--outline);
  height: 1rem;
  transition: none;
  flex: auto;
}

.field.label.border:not(.fill) > :focus + label::after {
  border-top: 0.125rem solid var(--primary);
}

.field.label.border:not(.fill) > :is(input, textarea):is(:focus, [placeholder]:not(:placeholder-shown), .active),
.field.label.border:not(.fill) > select {
  clip-path: polygon(-1% -1%, 0.75rem -1%, 0.75rem 0.5rem, calc(100% - 5rem) 0.5rem, calc(100% - 5rem) -1%, 101% -1%, 101% 101%, -1% 101%);
}

.field.label.border.round:not(.fill) > :is(input, textarea):is(:focus, [placeholder]:not(:placeholder-shown), .active),
.field.label.border.round:not(.fill) > select {
  clip-path: polygon(-1% -1%, 1.25rem -1%, 1.25rem 0.5rem, calc(100% - 5rem) 0.5rem, calc(100% - 5rem) -1%, 101% -1%, 101% 101%, -1% 101%);
}

.field.label > :focus + label {
  color: var(--primary);
}

.field.label.invalid > label,
.field.label.invalid > label::after {
  color: var(--error) !important;
  border-color: var(--error) !important;
}

.field.label > label > a {
  height: inherit;
  line-height: inherit;
  width: 1rem;
}

.field.label > label > a > :is(i, img, svg) {
  height: 1rem;
  line-height: 1rem;
  width: 1rem;
  font-size: 1rem;
}

/* helper */
.field > :is(.helper, .error) {
  position: absolute;
  left: 1rem;
  bottom: 0;
  transform: translateY(100%);
  font-size: 0.75rem;
  background: none !important;
  padding-top: 0.125rem;
}

a.helper {
  color: var(--primary);
}

.field > .error {
  color: var(--error) !important;
}

.field.round > :is(.helper, .error) {
  left: 1.5rem;
}

.field.invalid > .helper {
  display: none;
}

table td > .field {
  margin: 0;
}
