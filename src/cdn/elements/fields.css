.field {
  height: 3rem;
  margin-bottom: 2rem;
}

* + .field {
  margin-top: 1rem;
}

.grid > * > .field {
  margin-bottom: 1rem;
}

.grid > * > .field + .field {
  margin-top: 2rem;
}

.grid.no-space > * > .field + .field {
  margin-top: 1rem;
}

.grid.medium-space > * > .field + .field {
  margin-top: 2.5rem;
}

.grid.large-space > * > .field + .field {
  margin-top: 3rem;
}

.field.small {
  height: 2.5rem;
}

.field.medium {
  height: 3rem;
}

.field.large {
  height: 3.5rem;
}

.field.extra {
  height: 4rem;
}

.field::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: inherit;
  background-color: inherit;
}

.field.fill::before {
  background-color: var(--surface-variant);
  color: var(--on-surface-variant);
}

/* icon */
.field > i,
.field > img,
.field > .loader {
  position: absolute;
  top: 50%;
  left: auto;
  right: 1rem;
  transform: translateY(-50%);
  cursor: pointer;
  z-index: 0;
}

.field.border > i,
.field.fill > i,
.field.round > i,
.field.border > img,
.field.fill > img,
.field.round > img,
.field.border > .loader,
.field.fill > .loader,
.field.round > .loader {
  left: auto;
  right: 1rem;
}

.field > i:first-child,
.field > img:first-child,
.field > .loader:first-child {
  left: 1rem;
  right: auto;
}

.field.border > i:first-child,
.field.fill > i:first-child,
.field.round > i:first-child,
.field.border > img:first-child,
.field.fill > img:first-child,
.field.round > img:first-child,
.field.border > .loader:first-child,
.field.fill > .loader:first-child,
.field.round > .loader:first-child {
  left: 1rem;
  right: auto;
}

.field.invalid > i {
  color: var(--error);
}

.field > .loader {
  border-width: 0.1875rem;
  width: 1.5rem;
  height: 1.5rem;
}

/* input, textarea and select */
.field > select,
input[type^=date],
input[type^=time] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
}

input[type^=date]::-webkit-inner-spin-button,
input[type^=date]::-webkit-calendar-picker-indicator,
input[type^=time]::-webkit-inner-spin-button,
input[type^=time]::-webkit-calendar-picker-indicator {
  opacity: 0;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  cursor: pointer;
}

input[type=file] {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  opacity: 0;
  cursor: pointer;
}

.field > input,
.field > textarea,
.field > select {
  border: 0.0625rem solid transparent;
  padding: 0 0.9375rem;
  font-family: inherit;
  font-size: 1rem;
  width: 100%;
  height: 100%;
  outline: none;
  z-index: 1;
  background: none;
  resize: none;
}

.field > input:focus,
.field > textarea:focus,
.field > select:focus {
  border: 0.125rem solid transparent;
  padding: 0 0.875rem;
}

.field.border > input,
.field.border > textarea,
.field.border > select {
  border-color: var(--outline);
}

.field.border > input:focus,
.field.border > textarea:focus,
.field.border > select:focus {
  border-color: var(--primary);
}

.field.round > input,
.field.round > textarea,
.field.round > select {
  padding-left: 1.4376rem;
  padding-right: 1.4376rem;
}

.field.round > input:focus,
.field.round > textarea:focus,
.field.round > select:focus {
  padding-left: 1.375rem;
  padding-right: 1.375rem;
}

.field.prefix > input,
.field.prefix > textarea,
.field.prefix > select {
  padding-left: 2.9375rem;
}

.field.prefix > input:focus,
.field.prefix > textarea:focus,
.field.prefix > select:focus {
  padding-left: 2.875rem;
}

.field.suffix > input,
.field.suffix > textarea,
.field.suffix > select {
  padding-right: 2.9375rem;
}

.field.suffix > input:focus,
.field.suffix > textarea:focus,
.field.suffix > select:focus {
  padding-right: 2.875rem;
}

.field:not(.border, .round) > input,
.field:not(.border, .round) > textarea,
.field:not(.border, .round) > select {
  border-bottom-color: var(--outline);
}

.field:not(.border, .round) > input:focus,
.field:not(.border, .round) > textarea:focus,
.field:not(.border, .round) > select:focus {
  border-bottom-color: var(--primary);
}

.field {
  border-radius: 0.25rem 0.25rem 0 0;
}

.field.border {
  border-radius: 0.25rem;
}

.field.round {
  border-radius: 2rem;
}

.field.round:not(.border, .fill) > input,
.field.round:not(.border, .fill) > textarea,
.field.round:not(.border, .fill) > select,
.field.round:not(.border) > input:focus,
.field.round:not(.border) > textarea:focus,
.field.round:not(.border) > select:focus {
  box-shadow: var(--elevate1);
}

.field.round:not(.border, .fill) > input:focus,
.field.round:not(.border, .fill) > textarea:focus,
.field.round:not(.border, .fill) > select:focus {
  box-shadow: var(--elevate2);
}

.field.invalid:not(.border, .round) > input,
.field.invalid:not(.border, .round) > textarea,
.field.invalid:not(.border, .round) > select,
.field.invalid:not(.border, .round) > input:focus,
.field.invalid:not(.border, .round) > textarea:focus,
.field.invalid:not(.border, .round) > select:focus {
  border-bottom-color: var(--error);
}

.field.invalid.border > input,
.field.invalid.border > textarea,
.field.invalid.border > select,
.field.invalid.border > input:focus,
.field.invalid.border > textarea:focus,
.field.invalid.border > select:focus {
  border-color: var(--error);
}

.field > :disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.field.small.textarea {
  height: 4.5rem;
}

.field.textarea,
.field.medium.textarea {
  height: 5.5rem;
}

.field.large.textarea {
  height: 6.5rem;
}

.field.extra.textarea {
  height: 7.5rem;
}

.field > select > option {
  background-color: var(--surface);
  color: var(--on-surface);
}

.field.label > input,
.field.label > select {
  padding-top: 1rem;
}

.field.label.border:not(.fill) > input,
.field.label.border:not(.fill) > select {
  padding-top: 0;
}

.field.label.small > textarea {
  padding-top: 1.125rem;
}

.field.label > textarea,
.field.label.medium > textarea {
  padding-top: 1.375rem;
}

.field.label.large > textarea {
  padding-top: 1.625rem;
}

.field.label.extra > textarea {
  padding-top: 1.875rem;
}

.field.small:not(.label) > textarea,
.field.small.border:not(.fill) > textarea {
  padding-top: 0.625rem;
}

.field:not(.label) > textarea,
.field.border:not(.fill) > textarea,
.field.medium:not(.label) > textarea,
.field.medium.border:not(.fill) > textarea {
  padding-top: 0.875rem;
}

.field.large:not(.label) > textarea,
.field.large.border:not(.fill) > textarea {
  padding-top: 1.125rem;
}

.field.extra:not(.label) > textarea,
.field.extra.border:not(.fill) > textarea {
  padding-top: 1.375rem;
}

/* label */
.field.label > label {
  position: absolute;
  top: 50%;
  left: 1rem;
  font-size: 1rem;
  transform: translateY(-50%);
  transition: var(--speed2) all, 0s background-color;
  z-index: 0;
}

.field.label.textarea.small > label {
  top: 1.25rem;
}

.field.label.textarea > label,
.field.label.textarea.medium > label {
  top: 1.5rem;
}

.field.label.textarea.large > label {
  top: 1.75rem;
}

.field.label.textarea.extra > label {
  top: 2rem;
}

.field.label.round > label {
  left: 1.5rem;
}

.field.label.prefix > label {
  left: 3rem;
}

.field.label > label.active,
.field.label > [placeholder]:focus ~ label,
.field.label > [placeholder]:not(:placeholder-shown) ~ label {
  font-size: 0.75rem;
  transform: translateY(-120%);
  z-index: 1;
}

.field.label.border:not(.fill) > label.active,
.field.label.border:not(.fill) > [placeholder]:focus ~ label,
.field.label.border:not(.fill) > [placeholder]:not(:placeholder-shown) ~ label {
  font-size: 0.75rem;
  top: 0%;
  left: 1rem;
  transform: translateY(-50%);
  z-index: 1;
}

.field.label.border.round:not(.fill) > label.active,
.field.label.border.round:not(.fill) > [placeholder]:focus ~ label,
.field.label.border.round:not(.fill) > [placeholder]:not(:placeholder-shown) ~ label {
  left: 1.5rem;
  z-index: 1;
}

.field.label > :focus ~ label {
  color: var(--primary);
}

.field.invalid > label {
  color: var(--error) !important;
}

.field > label.required::after,
.field.required > label::after {
  content: " * ";
}

/* helper */
.field > .helper,
.field > .error {
  position: absolute;
  left: 1rem;
  bottom: 0;
  transform: translateY(100%);
  font-size: 0.75rem;
  background: none !important;
  padding-top: 0.125rem;
}

a.helper {
  color: var(--primary);
}

.field > .error {
  color: var(--error) !important;
}

.field.round > .helper,
.field.round > .error {
  left: 1.5rem;
}

.field.invalid > .helper {
  display: none;
}

table td > .field {
  max-height: 100%;
  height: 100%;
}
